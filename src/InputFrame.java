 import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.LayoutManager;
import java.awt.RenderingHints;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JPanel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author nigga
 */
public class InputFrame extends javax.swing.JFrame {
    private final String defFirstName = "First Name";
    private final String defLastName = "Last Name";
    private final String defDateOfBirth = "DD/MM/YYYY";
    private final String defPlaceOfBirth = "Place of Birth";
    private Font inputFieldFont = new Font("Bitstream Charter", Font.PLAIN, 18);
    private Font errorFont = new Font("Bitstream Charter", Font.PLAIN, 15);
    private Color textColor = new Color(0x100c22);
    private Color backgroundWhite = new Color(0xebe9f7);
    private int radius = 30;
    private int strokeSize = 4;
    private int borderOffset = 5;
    private String invalidInputMessage = "";
    

    /**
     * Creates new form NewJFrame
     */
    public InputFrame() {
        setVisible(true);
        initComponents();
    }

    public static boolean isDateOfBirthValid(String dobString) {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        dateFormat.setLenient(false); // Disallow lenient parsing (e.g., Feb 31)

        try {
            Date dob = dateFormat.parse(dobString);
            // Check if the parsed date is equal to the input string, ensuring the format is valid
            return dobString.equals(dateFormat.format(dob));
        } catch (ParseException e) {
            return false; // Parsing failed, invalid date format
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rbGroupGender = new javax.swing.ButtonGroup();
        inputFields = new RoundedPanel(radius, backgroundWhite, strokeSize, borderOffset, textColor);
        tfLastName = new javax.swing.JTextField();
        tfFirstName = new javax.swing.JTextField();
        tfDateOfBirth = new javax.swing.JTextField();
        tfPlaceOfBirth = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        btnOk = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        rbMale = new javax.swing.JRadioButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        errorLabel = new javax.swing.JLabel();
        background = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AstroBro");
        setBackground(new Color(0x333333));
        setBounds(new java.awt.Rectangle(0, 0, 640, 480));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(720, 480));
        setResizable(false);
        setSize(new java.awt.Dimension(720, 600));
        getContentPane().setLayout(new javax.swing.OverlayLayout(getContentPane()));

        inputFields.setBackground(backgroundWhite);
        inputFields.setForeground(new Color(0xe9d6fa));
        inputFields.setMaximumSize(new java.awt.Dimension(350, 440));
        inputFields.setMinimumSize(new java.awt.Dimension(0, 0));
        inputFields.setOpaque(false);
        inputFields.setPreferredSize(new java.awt.Dimension(350, 400));
        inputFields.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inputFieldsMouseClicked(evt);
            }
        });

        tfLastName.setBackground(backgroundWhite);
        tfLastName.setFont(inputFieldFont);
        tfLastName.setForeground(new Color(0x100c22));
        tfLastName.setText("Last Name");
        tfLastName.setBorder(null);
        tfLastName.setCaretColor(new java.awt.Color(204, 204, 204));
        tfLastName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfLastNameMouseClicked(evt);
            }
        });
        tfLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfLastNameActionPerformed(evt);
            }
        });

        tfFirstName.setBackground(backgroundWhite);
        tfFirstName.setFont(inputFieldFont);
        tfFirstName.setForeground(new Color(0x100c22));
        tfFirstName.setText("First Name");
        tfFirstName.setBorder(null);
        tfFirstName.setCaretColor(new java.awt.Color(204, 204, 204));
        tfFirstName.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        tfFirstName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfFirstNameMouseClicked(evt);
            }
        });

        tfDateOfBirth.setBackground(backgroundWhite);
        tfDateOfBirth.setFont(inputFieldFont);
        tfDateOfBirth.setForeground(new Color(0x100c22));
        tfDateOfBirth.setText("DD/MM/YYYY");
        tfDateOfBirth.setBorder(null);
        tfDateOfBirth.setCaretColor(new java.awt.Color(204, 204, 204));
        tfDateOfBirth.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfDateOfBirthMouseClicked(evt);
            }
        });

        tfPlaceOfBirth.setBackground(backgroundWhite);
        tfPlaceOfBirth.setFont(inputFieldFont);
        tfPlaceOfBirth.setForeground(new Color(0x100c22));
        tfPlaceOfBirth.setText("Place of Birth");
        tfPlaceOfBirth.setBorder(null);
        tfPlaceOfBirth.setCaretColor(new java.awt.Color(204, 204, 204));
        tfPlaceOfBirth.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tfPlaceOfBirthMouseClicked(evt);
            }
        });
        tfPlaceOfBirth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPlaceOfBirthActionPerformed(evt);
            }
        });

        jSeparator1.setBackground(backgroundWhite);
        jSeparator1.setForeground(textColor);

        jSeparator2.setBackground(backgroundWhite);
        jSeparator2.setForeground(textColor);

        jSeparator3.setBackground(backgroundWhite);
        jSeparator3.setForeground(textColor);

        jSeparator4.setBackground(backgroundWhite);
        jSeparator4.setForeground(textColor);

        jLabel2.setBackground(backgroundWhite);
        jLabel2.setFont(new java.awt.Font("Abyssinica SIL", 0, 24)); // NOI18N
        jLabel2.setForeground(new Color(0x100c22));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/cute_planet.png"))); // NOI18N
        jLabel2.setText("<html>\n<center>\n<strong>ASTROBRO<strong><br>\n<center>\n<html>");

        btnOk.setBackground(new Color(0x726db6));
        btnOk.setFont(inputFieldFont);
        btnOk.setForeground(new Color(0xebe9f7));
        btnOk.setText("OK");
        btnOk.setToolTipText("");
        btnOk.setBorder(new javax.swing.border.LineBorder(new Color(0x726db6), 2, true));
        btnOk.setContentAreaFilled(false);
        btnOk.setOpaque(true);
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnClear.setBackground(new Color(0x726db6));
        btnClear.setFont(inputFieldFont);
        btnClear.setForeground(new Color(0xebe9f7));
        btnClear.setText("Clear");
        btnClear.setBorder(new javax.swing.border.LineBorder(new Color(0x726db6), 2, true));
        btnClear.setContentAreaFilled(false);
        btnClear.setOpaque(true);
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        rbMale.setBackground(backgroundWhite);
        rbGroupGender.add(rbMale);
        rbMale.setFont(inputFieldFont);
        rbMale.setForeground(new Color(0x100c22));
        rbMale.setText("Male");
        rbMale.setContentAreaFilled(false);

        jRadioButton1.setBackground(backgroundWhite);
        rbGroupGender.add(jRadioButton1);
        jRadioButton1.setFont(inputFieldFont);
        jRadioButton1.setForeground(new Color(0x100c22));
        jRadioButton1.setText("Female");
        jRadioButton1.setContentAreaFilled(false);

        errorLabel.setFont(errorFont);
        errorLabel.setForeground(new java.awt.Color(255, 0, 0));
        errorLabel.setText(invalidInputMessage);

        javax.swing.GroupLayout inputFieldsLayout = new javax.swing.GroupLayout(inputFields);
        inputFields.setLayout(inputFieldsLayout);
        inputFieldsLayout.setHorizontalGroup(
            inputFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputFieldsLayout.createSequentialGroup()
                .addGroup(inputFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inputFieldsLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(inputFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfPlaceOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(inputFieldsLayout.createSequentialGroup()
                                .addGroup(inputFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbMale)
                                    .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(inputFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(inputFieldsLayout.createSequentialGroup()
                                        .addGap(7, 7, 7)
                                        .addComponent(jRadioButton1))
                                    .addGroup(inputFieldsLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(errorLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(inputFieldsLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        inputFieldsLayout.setVerticalGroup(
            inputFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputFieldsLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(tfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(tfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(tfPlaceOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(inputFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbMale)
                    .addComponent(jRadioButton1))
                .addGap(18, 18, 18)
                .addGroup(inputFieldsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnClear)
                    .addComponent(btnOk))
                .addGap(30, 30, 30)
                .addComponent(errorLabel)
                .addContainerGap())
        );

        getContentPane().add(inputFields);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/constellation.jpg"))); // NOI18N

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 720, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        getContentPane().add(background);

        //pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inputFieldsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inputFieldsMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_inputFieldsMouseClicked

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here
        if(evt.getSource() == btnClear) {
            tfFirstName.setText(defFirstName);
            tfLastName.setText(defLastName);
            tfDateOfBirth.setText(defDateOfBirth);
            tfPlaceOfBirth.setText(defPlaceOfBirth);
            rbGroupGender.clearSelection();
        }
    }//GEN-LAST:event_btnClearActionPerformed

    private void tfPlaceOfBirthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPlaceOfBirthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfPlaceOfBirthActionPerformed

    private void tfPlaceOfBirthMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfPlaceOfBirthMouseClicked
        // TODO add your handling code here:
        if (evt.getSource() == tfPlaceOfBirth) {
            if(tfPlaceOfBirth.getText().equals(defPlaceOfBirth)){
                tfPlaceOfBirth.setText("");
            }
            if (tfFirstName.getText().isEmpty()) {
                tfFirstName.setText(defFirstName);
            } if (tfLastName.getText().isEmpty()) {
                tfLastName.setText(defLastName);
            } if (tfDateOfBirth.getText().isEmpty()) {
                tfDateOfBirth.setText(defDateOfBirth);
            }
        }
    }//GEN-LAST:event_tfPlaceOfBirthMouseClicked

    private void tfDateOfBirthMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfDateOfBirthMouseClicked
        // TODO add your handling code here:
        if (evt.getSource() == tfDateOfBirth) {
            if(tfDateOfBirth.getText().equals(defDateOfBirth)){
                tfDateOfBirth.setText("");
            }
            if (tfFirstName.getText().isEmpty()) {
                tfFirstName.setText(defFirstName);
            } if (tfLastName.getText().isEmpty()) {
                tfLastName.setText(defLastName);
            } if (tfPlaceOfBirth.getText().isEmpty()) {
                tfPlaceOfBirth.setText(defPlaceOfBirth);
            }
        }
    }//GEN-LAST:event_tfDateOfBirthMouseClicked

    private void tfFirstNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfFirstNameMouseClicked
        // TODO add your handling code here:
        if (evt.getSource() == tfFirstName) {
            if(tfFirstName.getText().equals(defFirstName)){
                tfFirstName.setText("");
            } if (tfLastName.getText().isEmpty()) {
                tfLastName.setText(defLastName);
            } if (tfDateOfBirth.getText().isEmpty()) {
                tfDateOfBirth.setText(defDateOfBirth);
            } if (tfPlaceOfBirth.getText().isEmpty()) {
                tfPlaceOfBirth.setText(defPlaceOfBirth);
            }
        }
    }//GEN-LAST:event_tfFirstNameMouseClicked

    private void tfLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfLastNameActionPerformed

    private void tfLastNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tfLastNameMouseClicked
        // TODO add your handling code here:
        if (evt.getSource() == tfLastName) {
            if(tfLastName.getText().equals(defLastName)){
                tfLastName.setText("");
            }
            if (tfFirstName.getText().isEmpty()) {
                tfFirstName.setText(defFirstName);
            } if (tfDateOfBirth.getText().isEmpty()) {
                tfDateOfBirth.setText(defDateOfBirth);
            } if (tfPlaceOfBirth.getText().isEmpty()) {
                tfPlaceOfBirth.setText(defPlaceOfBirth);
            }
        }
    }//GEN-LAST:event_tfLastNameMouseClicked

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        if(evt.getSource() == btnOk) {
            String firstName = tfFirstName.getText();
            String lastName = tfLastName.getText();
            String placeOfBirth = tfPlaceOfBirth.getText();
            String dateOfBirth = tfDateOfBirth.getText();
            
            if (firstName.isEmpty() || firstName.equals(defFirstName)){
                errorLabel.setText("Enter First Name");
                return;
            } if (lastName.isEmpty() || lastName.equals(defLastName)){
                errorLabel.setText("Enter Last Name");
                return;
            } if (dateOfBirth.isEmpty() || dateOfBirth.equals(defDateOfBirth)) {
                errorLabel.setText("Enter DateOfBirth");
            } if (placeOfBirth.isEmpty() || placeOfBirth.equals(defPlaceOfBirth)){
                errorLabel.setText("Enter Place Of Birth");
                return;
            } if (rbGroupGender.getSelection() == null) {
                errorLabel.setText("Select Gender");
                return;
            } 
            
            if (isDateOfBirthValid(dateOfBirth)) {
                Numerology numerology = new Numerology(new Birthday(dateOfBirth));
                dispose();
                new OutputFrame(numerology);
            } else {
                errorLabel.setText("Invalid Date Of Birth");
            }
        }
    }//GEN-LAST:event_btnOkActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InputFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InputFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InputFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InputFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InputFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnOk;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JPanel inputFields;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.ButtonGroup rbGroupGender;
    private javax.swing.JRadioButton rbMale;
    private javax.swing.JTextField tfDateOfBirth;
    private javax.swing.JTextField tfFirstName;
    private javax.swing.JTextField tfLastName;
    private javax.swing.JTextField tfPlaceOfBirth;
    // End of variables declaration//GEN-END:variables
    class RoundedPanel extends JPanel {
        private Color backgroundColor;
        private int cornerRadius = 15;
        private int strokeSize = 3;
        private int borderOffset = 7;
        private Color borderColor;
        
        public RoundedPanel(LayoutManager layout, int radius) {
            super(layout);
            cornerRadius = radius;
        }
        
        public RoundedPanel(LayoutManager layout, int radius, int stroke, int offset, Color borderColor) {
            super(layout);
            cornerRadius = radius;
            strokeSize = stroke;
            borderOffset = offset;
            this.borderColor = borderColor;
        }
        
        public RoundedPanel(LayoutManager layout, int radius, Color bgColor) {
            super(layout);
            cornerRadius = radius;
            backgroundColor = bgColor;
        }
        
        public RoundedPanel(LayoutManager layout, int radius, Color bgColor, int stroke, int offset, Color borderColor) {
            super(layout);
            cornerRadius = radius;
            backgroundColor = bgColor;
            strokeSize = stroke;
            borderOffset = offset;
            this.borderColor = borderColor;
        }
        
        public RoundedPanel(int radius) {
            super();
            cornerRadius = radius;
        }
        
        public RoundedPanel(int radius, int stroke, int offset, Color borderColor) {
            super();
            cornerRadius = radius;
            strokeSize = stroke;
            borderOffset = offset;
            this.borderColor = borderColor;
        }
        
        public RoundedPanel(int radius, Color bgColor) {
            super();
            cornerRadius = radius;
            backgroundColor = bgColor;
            
        }
        
        public RoundedPanel(int radius, Color bgColor, int stroke, int offset, Color borderColor) {
            super();
            cornerRadius = radius;
            backgroundColor = bgColor;
            strokeSize = stroke;
            borderOffset = offset;
            this.borderColor = borderColor;
        }
        
        
        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            Dimension arcs = new Dimension(cornerRadius, cornerRadius);
            int width = getWidth();
            int height = getHeight();
            Graphics2D graphics = (Graphics2D) g;
            graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            
            // draws rounded panels with borders
            if (backgroundColor != null) {
                graphics.setColor(backgroundColor);
            } else {
                graphics.setColor(getBackground());
            }
            
            graphics.fillRoundRect(0, 0, width-1, height-1, arcs.width, arcs.height); // paint background
            
            if (borderColor != null) {
                graphics.setColor(borderColor);
            } else {
                graphics.setColor(getForeground());
            }
            graphics.setStroke(new BasicStroke(strokeSize));
            graphics.drawRoundRect(borderOffset, borderOffset, width-1 - 2*borderOffset, height-1 - 2*borderOffset,arcs.width, arcs.height); // paint border
        }
    }
}
